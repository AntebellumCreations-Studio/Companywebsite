{
  "swagger": "2.0",
  "info": {
    "description": "API for a Medium clone",
    "version": "1.0.0",
    "title": "Medium Clone API"
  },
  "host": "localhost:3000/api/v1",
  "basePath": "/",
  "schemes": ["http", "https"],
  "securityDefinitions": {
    "Bearer": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  },
  "tags": [
    {
      "name": "Auth"
    },
    {
      "name": "Users"
    },
    {
      "name": "Posts"
    },
    {
      "name": "Comments"
    },
    {
      "name": "Likes"
    },
    {
      "name": "Follows"
    }
  ],
  "paths": {
    "/auth/signup": {
      "post": {
        "tags": ["Auth"],
        "summary": "User signup",
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "description": "User registration details",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserSignup"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "User registered successfully",
            "schema": {
              "$ref": "#/definitions/SignupResponse"
            }
          },
          "400": {
            "description": "Invalid request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": ["Auth"],
        "summary": "User login",
        "parameters": [
          {
            "name": "credentials",
            "in": "body",
            "description": "User credentials (email or username and password)",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserLogin"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Login successful",
            "schema": {
              "$ref": "#/definitions/LoginResponse"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/protected/resource": {
      "get": {
        "summary": "Protected resource",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Access granted",
            "schema": {
              "$ref": "#/definitions/ProtectedResourceResponse"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },

    "/users/me": {
      "get": {
        "tags": ["Users"],
        "summary": "Get logged-in user details",
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UserResponse"
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },

      "patch": {
        "tags": ["Users"],
        "summary": "Update logged-in user profile",
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "description": "Updated user profile details",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User profile updated successfully"
          },
          "400": {
            "description": "Invalid request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "delete": {
        "tags": ["Users"],
        "summary": "Delete logged-in user",
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "User deleted successfully"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/users": {
      "get": {
        "tags": ["Users"],
        "summary": "Get list of users",
        "security": [
          {
            "Bearer": [],
            "role": ["admin"]
          }
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Get list of users",
            "schema": {
              "type": "object",
              "properties": {
                "results": {
                  "type": "integer",
                  "description": "Number of users returned"
                },
                "paginationResults": {
                  "$ref": "#/definitions/Pagination",
                  "description": "Pagination information"
                },
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/User"
                  },
                  "description": "List of users"
                }
              }
            }
          }
        }
      }
    },

    "/users/{id}": {
      "get": {
        "tags": ["Users"],
        "summary": "Get user by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User ID",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UserResponse"
            }
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "patch": {
        "tags": ["Users"],
        "summary": "(Admin) Update user by ID",
        "security": [
          {
            "Bearer": [],
            "role": ["admin"]
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User ID",
            "required": true,
            "type": "string"
          },
          {
            "name": "user",
            "in": "body",
            "description": "Updated user details",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User updated successfully"
          },
          "400": {
            "description": "Invalid request"
          },
          "404": {
            "description": "User not found"
          }
        }
      },

      "delete": {
        "tags": ["Users"],
        "summary": "(Admin) Delete user by ID",
        "security": [
          {
            "Bearer": [],
            "role": ["admin"]
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User ID",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "User deleted successfully"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    }
  },
  "definitions": {
    "UserSignup": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "username": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "confirmPassword": {
          "type": "string"
        }
      },
      "required": ["name", "email", "username", "password", "confirmPassword"]
    },

    "UserLogin": {
      "type": "object",
      "properties": {
        "emailOrUsername": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      },
      "required": ["emailOrUsername", "password"]
    },

    "SignupResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "object",
          "properties": {
            "_id": {
              "type": "string"
            },
            "email": {
              "type": "string"
            },
            "username": {
              "type": "string"
            }
          },
          "required": ["_id", "email", "username"]
        },
        "token": {
          "type": "string"
        }
      },
      "required": ["data", "token"]
    },

    "LoginResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "object",
          "properties": {
            "_id": {
              "type": "string"
            },
            "email": {
              "type": "string"
            },
            "username": {
              "type": "string"
            }
          },
          "required": ["_id", "email", "username"]
        },
        "token": {
          "type": "string"
        }
      },
      "required": ["data", "token"]
    },

    "User": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "username": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "profilePicture": {
          "type": "object",
          "properties": {
            "url": {
              "type": "string"
            },
            "publicId": {
              "type": ["string", "null"]
            }
          }
        },
        "role": {
          "type": "string"
        },
        "active": {
          "type": "boolean"
        },
        "followers": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "following": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "Pagination": {
      "type": "object",
      "properties": {
        "currentPage": {
          "type": "integer"
        },
        "limit": {
          "type": "integer"
        },
        "skip": {
          "type": "integer"
        },
        "totalPages": {
          "type": "integer"
        }
      }
    }
  }
}
